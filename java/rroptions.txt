java version "1.6.0_26"
Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
[premain: Installling RoadRunner Agent...]
## 
## 
## Environment Variables
## ---------------------
##   RR_MODE        either FAST or SLOW.  All asserts, logging, and debugging statements
##                  should be nested inside a test ensuring that RR_MODE is SLOW.
##   RR_META_DATA   The directory created on previous run by -dump from which to reload
##                  cached metadata and instrumented class files.
## 
## 
## 
## Usage
## -----
##     rrrun  <options>  MainClass/EventLog
## 
## Standard Options
## ----------------
##  -args={String}               STABLE     Read additional command-line options from the given file.  Can be used multiple 
##                                         times.
## 
##  -d={String}                  STABLE     Turn on the given debugging key.  Messages printed by Util.debugf(key, ...)     
##                                         will only be printed if the key is turned on.
## 
##  -quiet                       STABLE     Quiet mode.  Will not print debugging or logging messages.
## 
##  -logs={String}               STABLE     The path to the directory where log files will be stored.
## 
##  -out={String}                STABLE     Log file name for Util.out.
## 
##  -err={String}                STABLE     Log file name for Util.err.
## 
##  -help                        STABLE     Print this message.
## 
## General
## -------
##  -classpath={String}          STABLE     The class path used to load classes from the target program.
## 
##  -toolpath={String}           STABLE     The class path used to find RoadRunner tools specified.
## 
##  -tool={String}               STABLE     The tool chain to use.  Can be single tool, sequentially composed tools,        
##                                         parallel composed tools, or parenthesized chain.  Specified with full class     
##                                         names or abbrevations in rr.props files on the toolpath.  Examples: 
##                                           -tool=FT
##                                           -tool=TL:V
##                                           -tool=rrtools.fastrack.FastTrack
##                                           -tool=FT|HB
##                                           -tool=FT:(P|V)
## 
##  -tools                       STABLE     Print all known tools
## 
##  -repository={String}         UNSTABLE   Classpath to search for a class if RoadRunner cannot find it during metadata    
##                                         loading with the standard delegation technique.
## 
## Instrumentor
## ------------
##  -noinst                      DEPRECATED Do not instrument any class files.
## 
##  -inst={InstrumentationMode}  STABLE     One of [INST, REP, NOINST].  Instrument mode: ISNT for instrument; NOINST for   
##                                         no instrument; REP for build repository
## 
##  -noFP                        STABLE     Do not use in-lined tool fastpath code for reads/writes.
## 
##  -classes={StringMatcher}     STABLE     Specifies classes to instrument.  The default is all but standard libs.  Uses   
##                                         the StringMatcher scheme.  Examples:
##                                           -classes="-.*cow.*" ignores classes with cow in name.
##                                           -classes="+.*moo.*" -classes="-.*cow.*" ignores classes with cow in name,     
##                                         except if they have moo in the name
## 
##  -fields={StringMatcher}      STABLE     Specifies which fields to instrument.  The default is all.
## 
##  -methods={StringMatcher}     STABLE     Specifies which methods to instrument.  The default is all.
## 
##  -lines={StringMatcher}       STABLE     Specifies which lines to instrument.  The default is all
## 
##  -shadowThread={StringMatcher}STABLE     Specifies which methods can be tranformed into version that take a ShadowThread 
##                                         parameter.  The default is all except main, run, and constructors.
## 
##  -noop={StringMatcher}        STABLE     Specifies which void methods should be replaced with a no op.  Useful for       
##                                         ignoring methods that check access via stack inspection.
## 
##  -values                      UNSTABLE   Pass tools.internal/new values for writes to tools.  Tools can then change the  
##                                         new value to be written.  You MUST run java with -noverify if you use -values   
##                                         in conjunction with array instrumentation.
## 
##  -noConstructor               STABLE     Turn off instrumentation of constructors and class initializers.
## 
##  -noClone                     STABLE     turn off special handling of clone
## 
##  -noEnter                     STABLE     Do not generate Enter and Exit events.
## 
##  -dump={String}               STABLE     Specifies to directory to which all metadata and instrumented class files       
##                                         should be dumped.  Empty string turns off dumping.
## 
##  -fancy                       UNSTABLE   Use a more complex instrumentor with some untested or experimental features.    
##                                         The fancy version may yield faster code.
## 
##  -arraySites                  STABLE     Track arrays only on given line locations.
## 
##  -noDecInline                 UNSTABLE   Turn off Thread State Decoration Inlining.
## 
## Monitor
## -------
##  -xml={String}                STABLE     Log file name for the xml summary printed at the end of the run.
## 
##  -noxml                       STABLE     Turn off printing the xml summary at the end of the run.
## 
##  -stacks                      STABLE     Record stack traces for printing in erros messages.  Stacks are expensive to    
##                                         compute, so by default RoadRunner doesn't (See ShadowThread.java).
## 
##  -pulse={String}              UNSTABLE   Install periodic tasks (stacks,stats,counts).  Example: -pulse=stacks:counts
## 
##  -noTidGC                     UNSTABLE   Do not reuse the tid for a thread that has completed.
## 
##  -nojoin                      UNSTABLE   By default RoadRunner waits for a thread to finishin by joining on it.  This    
##                                         causes problems if the target wait()'s on a Thread object, as is the case in    
##                                         Eclipse.  This option turns on a less efficient polling scheme.
## 
##  -indices={String}            UNSTABLE   Specifies which array indices sites to watch, ie 0:1:2:3:4
## 
##  -multiLoader                 UNSTABLE   Attempt to support multiple class loaders.
## 
##  -constantGC                  UNSTABLE   Turn on constant garbage collection.
## 
##  -updaters={UpdateMode}       UNSTABLE   One of [SAFE, UNSAFE].  Specify whether to use synchronized or unsynchronized   
##                                         updates to shadow locations.  Unsynchronized are faster may cause subtle issues 
##                                         because of the JMM.
## 
##  -array={ArrayMode}           STABLE     One of [NONE, FINE, COARSE, SPECIAL].  Determine the granularity of array       
##                                         shadow memory.
##                                            NONE tracks no array info.
##                                            FINE uses one location per index.
##                                            COARSE uses one location per array
##                                            SPECIAL can change from COARSE to FINE if tool requests it.
## 
##  -field={FieldMode}           STABLE     One of [FINE, COARSE].  Specify granularity of shadow for objects.  FINE is one 
##                                         location per field.  COARSE is one location per object.
## 
##  -nobarrier                   STABLE     Do not monitor barrier calls, even if monitor is installed.
## 
##  -noEventReuse                UNSTABLE   Turn of Event Reuse.
## 
##  -noArrayLookupOpt            UNSTABLE   Turn of Array lookup optimizations.
## 
##  -infThreads={Integer}        UNSTABLE   Number of threads that loop forever.
## 
##  -callSites                   UNSTABLE   Track Call Site Info.
## 
## Limits
## ------
##  -maxTime={Integer}           STABLE     Maximum execution time in seconds.
## 
##  -maxMem={Long}               STABLE     Maximum memory in MB.
## 
##  -maxTid={Integer}            STABLE     Maximum number of active threads.
## 
##  -maxWarn={Integer}           STABLE     Maximum number of warnings of each type that will be printed for a specific     
##                                         declaration/operation.
## 
## 
